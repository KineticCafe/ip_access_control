name: Elixir CI

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  elixir-ci:
    name: Elixir ${{ matrix.elixir }} (OTP ${{ matrix.otp }})

    env:
      LANG: en_US.UTF-8
      LC_CTYPE: en_US.UTF-8

    strategy:
      fail-fast: true
      matrix:
        include:
          - elixir: '1.14'
            otp: '25'
            os: ubuntu-22.04
          - elixir: '1.15'
            otp: '26'
            os: ubuntu-22.04
          - elixir: '1.16'
            otp: '26'
            os: ubuntu-22.04
          - elixir: '1.17'
            otp: '27'
            os: ubuntu-22.04
          - elixir: '1.18'
            otp: '27'
            os: ubuntu-22.04
            check_formatted: true
            warnings_as_errors: true
            dialyzer: true
            credo: true
            coveralls: true

    runs-on: ${{ matrix.os }}

    permissions:
      contents: read

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: block
          allowed-endpoints: >
            builds.hex.pm:443
            coveralls.io:443
            github.com:443
            repo.hex.pm:443

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - uses: erlef/setup-beam@e6d7c94229049569db56a7ad5a540c051a010af9 # v1.20.4
        id: install
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          key: builds@elixir-${{ steps.install.outputs.elixir-version }}-otp-${{ steps.install.outputs.otp-version }}-mix-${{ hashFiles('mix.lock') }}
          path: |
            deps
            _build

      - run: mix 'do' deps.get, deps.compile

      - run: mix format --check-formatted
        if: matrix.check_formatted

      - run: mix compile --warnings-as-errors
        if: matrix.warnings_as_errors

      - run: mix compile
        if: ${{ !matrix.warnings_as_errors }}

      - run: mix coveralls.github
        if: ${{ matrix.coveralls }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - run: mix test
        if: ${{ !matrix.coveralls }}

      - run: mix credo --strict
        if: matrix.credo

      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          key: plts@elixir-${{ steps.install.outputs.elixir-version }}-otp-${{ steps.install.outputs.otp-version }}-mix-${{ hashFiles('mix.lock') }}
          path: |
            priv/plts
          restore-keys: |
            plts@elixir-${{ steps.install.outputs.elixir-version }}-otp-${{ steps.install.outputs.otp-version }}-mix-

      - run: mix dialyzer --format github
        if: matrix.dialyzer
